<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzz.lsp.core.tltline.dao.TltLineBaseDAO">
	<resultMap type="TltLine" id="tltLineMap" >
		<id property="tltLineId" column="Tlt_LINE_ID"/>
		<result property="fromPlace" column="FROM_PLACE"/>
		<result property="toPlace" column="TO_PLACE"/>
		<result property="fromPCode" column="FROM_P_CODE"/>
		<result property="fromCCode" column="FROM_C_CODE"/>
		<result property="fromTCode" column="FROM_T_CODE"/>
		<result property="toPCode" column="TO_P_CODE"/>
		<result property="toCCode" column="TO_C_CODE"/>
		<result property="toTCode" column="TO_T_CODE"/>
		<result property="duration" column="DURATION"/>
		<result property="departCarOne" column="DEPART_CAR_ONE"/>
		<result property="departCarTwo" column="DEPART_CAR_TWO"/>
		<result property="goodsClasses" column="GOODS_CLASSES"/>
		<result property="heavyPrice" column="HEAVY_PRICE"/>
		<result property="bulkyPrice" column="BULKY_PRICE"/>
		<result property="heavyPriceUnit" column="HEAVY_PRICE_UNIT"/>
		<result property="bulkyPriceUnit" column="BULKY_PRICE_UNIT"/>
		<result property="payWays" column="PAY_WAYS"/>
		<result property="additionServices" column="ADDITION_SERVICES"/>
		<result property="commonPhrase" column="COMMON_PHRASE"/>
		<result property="linkMan" column="LINK_MAN"/>
		<result property="commonPhrase" column="COMMON_PHRASE"/>
		<result property="linkPhone" column="LINK_PHONE"/>
		<result property="linkMobile" column="LINK_MOBILE"/>
		<result property="resume" column="RESUME"/>
		<result property="createUser" column="CREATE_USER"/>
		<result property="createTime" column="CREATE_TIME"/>
		<result property="updateUser" column="UPDATE_USER"/>
		<result property="updateTime" column="UPDATE_TIME"/>
		<result property="publisher" column="PUBLISHER"/>
		
		<result property="isOpposite" column="IS_OPPOSITE"/>
		<result property="minTicket" column="MIN_TICKET"/>
	</resultMap>
	
	<resultMap type="TltLineVO" id="tltLineVOMap" >
		<result property="favoriteId" column="FAVORITE_ID"/>
		<result property="tltLineId" column="TLT_LINE_ID"/>
		<result property="publishId" column="PUBLISH_ID"/>
		<result property="backstageWrite" column="BACKSTAGE_WRITE"/>
		<result property="fromPlace" column="FROM_PLACE"/>
		<result property="toPlace" column="TO_PLACE"/>
		<result property="departCarOne" column="DEPART_CAR_ONE"/>
		<result property="departCarTwo" column="DEPART_CAR_TWO"/>
		<result property="duration" column="DURATION"/>
		<result property="goodsClasses" column="GOODS_CLASSES"/>
		<result property="additionServices" column="ADDITION_SERVICES"/>
		<result property="heavyPrice" column="HEAVY_PRICE"/>
		<result property="bulkyPrice" column="BULKY_PRICE"/>
		<result property="heavyPriceUnit" column="HEAVY_PRICE_UNIT"/>
		<result property="bulkyPriceUnit" column="BULKY_PRICE_UNIT"/>
		<result property="resume" column="RESUME"/>
		<result property="payWays" column="PAY_WAYS"/>
		<result property="enterpriseName" column="ENTERPRISE_NAME"/>
		<result property="linkMan" column="LINKMAN"/>
		<result property="linkPhone" column="LINK_PHONE"/>
		<result property="linkMobile" column="LINK_MOBILE"/>
		<result property="EQQ" column="EQQ"/>
		<result property="PQQ" column="PQQ"/>
		<result property="address" column="ADDRESS"/>
		<result property="fromPCode" column="FROM_P_CODE"/>
		<result property="fromCCode" column="FROM_C_CODE"/>
		<result property="fromTCode" column="FROM_T_CODE"/>
		<result property="toPCode" column="TO_P_CODE"/>
		<result property="toCCode" column="TO_C_CODE"/>
		<result property="toTCode" column="TO_T_CODE"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="realName" column="REAL_NAME"/>
		<result property="mobilePhone" column="MOBILE_PHONE"/>
		<result property="userType" column="USER_TYPE"/>
		<result property="publishTime" column="PUBLISH_TIME"/>
		<result property="isAuth" column="IS_AUTH"/>
		<result property="publisher" column="PUBLISHER"/>
		
		<result property="isOpposite" column="IS_OPPOSITE"/>
		<result property="minTicket" column="MIN_TICKET"/>
		<result property="headImage" column="HEAD_IMAGE"/>
		<result property="status" column="STATUS"/><!-- PISP零担专线收藏使用，避免用户收藏后，该信息被删除，查询信息详情出错 yunns于2015年10月23日14:36:09添加该映射 -->
		<result property="isDelete" column="IS_DELETE"/>
	</resultMap>
	
	<insert id="publishTltLine" parameterType="TltLine">
		insert into pisp_tlt_line(
				TLT_LINE_ID,FROM_PLACE,TO_PLACE,FROM_P_CODE,FROM_C_CODE,FROM_T_CODE,TO_P_CODE,TO_C_CODE,TO_T_CODE,
				DURATION,DEPART_CAR_ONE,DEPART_CAR_TWO,GOODS_CLASSES,HEAVY_PRICE,HEAVY_PRICE_UNIT,
				BULKY_PRICE,BULKY_PRICE_UNIT,PAY_WAYS,ADDITION_SERVICES,COMMON_PHRASE,LINKMAN,
				LINK_PHONE,LINK_MOBILE,RESUME,CREATE_USER,CREATE_TIME,UPDATE_USER,UPDATE_TIME,PUBLISHER,IS_OPPOSITE,MIN_TICKET
				)
		values(#{tltLineId,jdbcType=INTEGER},#{fromPlace,jdbcType=VARCHAR},#{toPlace,jdbcType=VARCHAR},
				#{fromPCode,jdbcType=INTEGER},#{fromCCode,jdbcType=INTEGER},#{fromTCode,jdbcType=INTEGER},#{toPCode,jdbcType=INTEGER},#{toCCode,jdbcType=INTEGER},#{toTCode,jdbcType=INTEGER},
				#{duration,jdbcType=INTEGER},#{departCarOne,jdbcType=INTEGER},#{departCarTwo,jdbcType=INTEGER},#{goodsClasses,jdbcType=VARCHAR},#{heavyPrice,jdbcType=FLOAT},#{heavyPriceUnit,jdbcType=VARCHAR},
				#{bulkyPrice,jdbcType=FLOAT},#{bulkyPriceUnit,jdbcType=VARCHAR},#{payWays,jdbcType=VARCHAR},#{additionServices,jdbcType=VARCHAR},#{commonPhrase,jdbcType=VARCHAR},#{linkMan,jdbcType=VARCHAR},
				#{linkPhone,jdbcType=VARCHAR},#{linkMobile,jdbcType=VARCHAR},#{resume,jdbcType=VARCHAR},
				#{createUser,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP},#{updateUser,jdbcType=INTEGER},#{updateTime,jdbcType=TIMESTAMP},#{publisher,jdbcType=VARCHAR},
				#{isOpposite,jdbcType=INTEGER},#{minTicket,jdbcType=FLOAT}
		      )
	</insert>
	
	<update id="updateTltLine" parameterType="TltLine">
		update pisp_tlt_line tl 
		<set>
			<if test="fromPlace != null and toPlace !='' ">
				tl.FROM_PLACE=#{fromPlace},
			</if>
			<if test="toPlace != null and toPlace !='' ">
				tl.TO_PLACE=#{toPlace},
			</if>
			<if test="fromPCode != null">
				tl.FROM_P_CODE=#{fromPCode},
			</if>
				tl.FROM_C_CODE=#{fromCCode},
				tl.FROM_T_CODE=#{fromTCode},
			<if test="toPCode != null">
				tl.TO_P_CODE=#{toPCode},
			</if>
				tl.TO_C_CODE=#{toCCode},
				tl.TO_T_CODE=#{toTCode},
				tl.DURATION=#{duration},
				tl.DEPART_CAR_ONE=#{departCarOne},
				tl.DEPART_CAR_TWO=#{departCarTwo},
				tl.PUBLISHER=#{publisher},
				tl.GOODS_CLASSES=#{goodsClasses},
				tl.HEAVY_PRICE=#{heavyPrice},
				tl.HEAVY_PRICE_UNIT=#{heavyPriceUnit},
				tl.BULKY_PRICE=#{bulkyPrice},
				tl.BULKY_PRICE_UNIT=#{bulkyPriceUnit},
				tl.PAY_WAYS=#{payWays},
				tl.ADDITION_SERVICES=#{additionServices},
				tl.COMMON_PHRASE=#{commonPhrase},
				tl.LINKMAN=#{linkMan},
				tl.LINK_PHONE=#{linkPhone},
			<if test="linkMobile != null and linkMobile !='' ">
				tl.LINK_MOBILE=#{linkMobile},
			</if>
				tl.RESUME=#{resume},
				tl.IS_OPPOSITE=#{isOpposite},
				tl.MIN_TICKET=#{minTicket},
			<if test="updateUser != null and updateUser !='' ">
				tl.UPDATE_USER=#{updateUser,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null and updateTime!='' ">
				tl.UPDATE_TIME=#{updateTime,jdbcType=TIMESTAMP}
			</if>
		</set> 
		where TLT_LINE_ID = #{tltLineId}
	</update>
	
	
	<select id="queryMyTltLines" parameterType="PublishInfoQuery" resultMap="com.lzz.lsp.core.publish.dao.PublishInfoBaseDAO.publishInfoVOMap">
			SELECT info.PUBLISH_ID,tl.FROM_PLACE,tl.TO_PLACE,tl.HEAVY_PRICE,dictheavy.val_name as HEAVY_PRICE_UNIT,tl.BULKY_PRICE,
			dictbulky.val_name as BULKY_PRICE_UNIT,tl.DURATION,info.PUBLISH_TIME,info.STATUS,tl.PAY_WAYS
			from pisp_publish_info info
			LEFT JOIN pisp_tlt_line tl on info.INFO_ID = tl.tlt_line_id
			LEFT JOIN pisp_dict_val dictheavy on dictheavy.dict_code = 'GOODS_WEIGHT_UNIT' and dictheavy.val_code = tl.heavy_price_unit
			LEFT JOIN pisp_dict_val dictbulky on dictbulky.dict_code = 'GOODS_WEIGHT_UNIT' and dictbulky.val_code = tl.bulky_price_unit
			where info.INFO_TYPE = 4 and info.IS_DELETE = 0
		<if test="status != null">
			and  info.STATUS = #{status}
		</if>
		<if test="osmpStatus != null">
		 	AND info.STATUS in
		 	<foreach collection="osmpStatus" item="osmpSta" open="(" separator="," close=")">
				#{osmpSta}
			</foreach>
		 </if>
		<if test="publishTimeValCode != null and publishTimeValCode !=''">
			<if test='publishTimeValCode == "1" or publishTimeValCode == "2" or publishTimeValCode =="3" '>
				and  date_format(info.PUBLISH_TIME,'%Y-%m-%d') = date_format(#{publishTime},'%Y-%m-%d')
			</if>
			<if test='publishTimeValCode == "4" or publishTimeValCode == "5" '>
				and  date_format(info.PUBLISH_TIME,'%Y-%m-%d') &gt;= date_format(#{publishTime},'%Y-%m-%d')
			</if>
			<if test='publishTimeValCode == "6" '>
				and  date_format(info.PUBLISH_TIME,'%Y-%m-%d') &lt;= date_format(#{publishTime},'%Y-%m-%d')
			</if>
		</if>
		<if test="fromPCode != null and fromPCode !=0 ">
			and  tl.FROM_P_CODE = #{fromPCode}
		</if>
		<if test="fromCCode != null and fromCCode !=0">
			and  tl.FROM_C_CODE = #{fromCCode}
		</if>
		<if test="fromTCode != null and fromTCode !=0">
			and  tl.FROM_T_CODE = #{fromTCode}
		</if>
		<if test="toPCode != null and toPCode !=0">
			 and tl.TO_P_CODE = #{toPCode}
		</if>
		<if test="toCCode != null and toCCode !=0">
			 and tl.TO_C_CODE = #{toCCode}
		</if>
		<if test="toTCode != null and toTCode !=0">
			 and tl.TO_T_CODE = #{toTCode}
		</if>
		<if test="userId != null">
		 	and info.USER_ID = #{userId}
		 </if>
		 
		 <!-- 2015-6-18 16:27:37 yunns add for osmp queryWholeLine method -->
		 <if test="publisher != '' and publisher != null ">
		 	and tl.PUBLISHER = #{publisher}
		 </if>
		 <if test="publishTimeStart != null and publishTimeEnd != null">
		 	and info.PUBLISH_TIME between #{publishTimeStart} and #{publishTimeEnd}
		 </if>
		 <if test="publishTimeStart != null and publishTimeEnd == null">
		 	 and info.PUBLISH_TIME &gt; #{publishTimeStart}
		 </if>
		 <if test="publishTimeStart == null and publishTimeEnd != null">
		 	 and info.PUBLISH_TIME &lt; #{publishTimeEnd} 
		 </if>
		 <!-- end -->
		  <if test="backstageWrite != null">
			and  info.BACKSTAGE_WRITE = #{backstageWrite}
		 </if>
	</select>
	
	<select id="getTltLine" parameterType="java.lang.Integer" resultMap="tltLineMap">
		SELECT * from pisp_tlt_line tl
		<where>
			<if test="tltLineId != null">
				 tl.TLT_LINE_ID = #{tltLineId}
			</if>
		</where>
	</select>
	
	<select id="queryTltLines" parameterType="TltLineQuery" resultMap="tltLineVOMap">
			SELECT tl.TLT_LINE_ID,tl.FROM_PLACE,tl.TO_PLACE,tl.DEPART_CAR_ONE,tl.DEPART_CAR_TWO,durationdict.VAL_NAME as DURATION,
				 tl.GOODS_CLASSES,tl.ADDITION_SERVICES,tl.HEAVY_PRICE,heavydict.VAL_NAME as HEAVY_PRICE_UNIT,tl.BULKY_PRICE,
				 bulkydict.VAL_NAME as BULKY_PRICE_UNIT,
				 tl.RESUME,info.PUBLISH_ID,info.BACKSTAGE_WRITE,tl.PAY_WAYS,tl.IS_OPPOSITE,tl.MIN_TICKET,
				 u.USER_TYPE,
				u.NICKNAME,
				pu.REAL_NAME,
				pu.MOBILE_PHONE,
				eu.ENTERPRISE_NAME,
				eu.ADDRESS,
				u.IS_AUTH,
				eu.QQ AS EQQ,
				pu.QQ AS PQQ,
				u.HEAD_IMAGE
				from pisp_publish_info info
				INNER JOIN pisp_tlt_line tl on info.info_id = tl.TLT_LINE_ID
				LEFT JOIN pisp_dict_val heavydict on heavydict.dict_code = 'GOODS_WEIGHT_UNIT' and heavydict.val_code = tl.HEAVY_PRICE_UNIT
				LEFT JOIN pisp_dict_val bulkydict on bulkydict.dict_code = 'GOODS_WEIGHT_UNIT' and bulkydict.val_code = tl.BULKY_PRICE_UNIT
				LEFT JOIN pisp_dict_val durationdict on durationdict.dict_code = 'TRANSPORT_TIME_RANGE' and durationdict.val_code = tl.DURATION
				
				LEFT JOIN pisp_user u on u.USER_ID = info.USER_ID
				LEFT JOIN pisp_euser eu on eu.USER_ID = u.USER_ID
				LEFT JOIN pisp_puser pu on pu.USER_ID = u.USER_ID 
			WHERE  info.INFO_TYPE = 4
			AND info.STATUS = 3
			<if test="fromPCode != null and fromPCode !=0 ">
				and  tl.FROM_P_CODE = #{fromPCode}
			</if>
			<if test="fromCCode != null and fromCCode !=0">
				and  tl.FROM_C_CODE = #{fromCCode}
			</if>
			<if test="fromTCode != null and fromTCode !=0">
				and  tl.FROM_T_CODE = #{fromTCode}
			</if>
			<if test="toPCode != null and toPCode !=0">
				 and tl.TO_P_CODE = #{toPCode}
			</if>
			<if test="toCCode != null and toCCode !=0">
				 and tl.TO_C_CODE = #{toCCode}
			</if>
			<if test="toTCode != null and toTCode !=0">
				 and tl.TO_T_CODE = #{toTCode}
			</if>
			
			<if test="duration != null and duration.length>0">
				 and tl.DURATION in
				 <foreach collection="duration" open="(" close=")" item="item" separator=",">
				 	#{item}
				 </foreach>
			</if>
			<if test="additionServices != null and additionServices.length>0">
				and  
				<foreach collection="additionServices" item="item" open="(" close=")" separator="or">
					tl.ADDITION_SERVICES like '%,${item},%'
				</foreach>
			</if>
	</select>
</mapper>