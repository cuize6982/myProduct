<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzz.lsp.core.goodssource.dao.GoodsSourceBaseDAO">
	<resultMap type="GoodsSource" id="goodsSourceMap" >
		<id property="goodsSourceId" column="GOODS_SOURCE_ID"/>
		<result property="fromPlace" column="FROM_PLACE"/>
		<result property="toPlace" column="TO_PLACE"/>
		<result property="goodsType" column="GOODS_TYPE"/>
		<result property="goodsName" column="GOODS_NAME"/>
		<result property="goodsClass" column="GOODS_CLASS"/>
		<result property="sourceType" column="SOURCE_TYPE"/>
		<result property="amount" column="AMOUNT"/>
		<result property="price" column="PRICE"/>
		<result property="amountUnit" column="AMOUNT_UNIT"/>
		<result property="priceUnit" column="PRICE_UNIT"/>
		<result property="isHurry" column="IS_HURRY"/>
		<result property="carTypeNeed" column="CAR_TYPE_NEED"/>
		<result property="carLengthNeed" column="CAR_LENGTH_NEED"/>
		<result property="carLengthNeedMin" column="CAR_LENGTH_NEED_MIN"/>
		<result property="carLengthNeedMax" column="CAR_LENGTH_NEED_MAX"/>
		<result property="carNumNeed" column="CAR_NUM_NEED"/>
		<result property="loadDate" column="LOAD_DATE"/>
		<result property="payWay" column="PAY_WAY"/>
		<result property="commonPhrase" column="COMMON_PHRASE"/>
		<result property="linkMan" column="LINKMAN"/>
		<result property="linkPhone" column="LINK_PHONE"/>
		<result property="linkMobile1" column="LINK_MOBILE1"/>
		<result property="linkMobile2" column="LINK_MOBILE2"/>
		<result property="mark" column="MARK"/>
		<result property="fromPCode" column="FROM_P_CODE"/>
		<result property="fromCCode" column="FROM_C_CODE"/>
		<result property="fromTCode" column="FROM_T_CODE"/>
		<result property="toPCode" column="TO_P_CODE"/>
		<result property="toCCode" column="TO_C_CODE"/>
		<result property="toTCode" column="TO_T_CODE"/>
		<result property="createUser" column="CREATE_USER"/>
		<result property="createTime" column="CREATE_TIME"/>
		<result property="updateUser" column="UPDATE_USER"/>
		<result property="updateTime" column="UPDATE_TIME"/>
		<result property="weight" column="WEIGHT"/>
		<result property="weightUnit" column="WEIGHT_UNIT"/>
		<result property="volume" column="VOLUME"/>
		<result property="volumeUnit" column="VOLUME_UNIT"/>
		<result property="publisher" column="PUBLISHER"/>
		<result property="infoContent" column="INFO_CONTENT"/>
		<result property="carTypeNeedName" column="CAR_TYPE_NEED_NAME"/>
		<result property="carLengthNeedName" column="CAR_LENGTH_NEED_NAME"/>
		<result property="placeKilometre" column="PLACE_KILOMETRE"/>
		<result property="carTypeFirstCode" column="CAR_TYPE_FIRST_CODE"/>
		<result property="carTypeSecondCode" column="CAR_TYPE_SECOND_CODE"/>
		<result property="carTypeThirdCode" column="CAR_TYPE_THIRD_CODE"/>
		<result property="defineCarType" column="DEFINE_CAR_TYPE"/>
		<result property="claimGoodsDays" column="CLAIM_GOODS_DAYS"/>
		<result property="goodsSourceInfoType" column="GOODS_SOURCE_INFO_TYPE"/>
	</resultMap>
	
	<resultMap type="GoodsSourceVO" id="goodsSourceVOMap" >
		<result property="favoriteId" column="FAVORITE_ID"/>
		<result property="publishId" column="PUBLISH_ID"/>
		<result property="goodsSourceId" column="GOODS_SOURCE_ID"/>
		<result property="userId" column="USER_ID"/>
		<result property="goodsTypeName" column="GOODS_TYPE_NAME"/>
		<result property="goodsName" column="GOODS_NAME"/>
		<result property="goodsClass" column="GOODS_CLASS"/>
		<result property="carTypeNeed" column="CAR_TYPE_NEED"/>
		<result property="carLengthNeed" column="CAR_LENGTH_NEED"/>
		<result property="mark" column="MARK"/>
		<result property="linkMan" column="LINKMAN"/>
		<result property="linkPhone" column="LINK_PHONE"/>
		<result property="loadDate" column="LOAD_DATE"/>
		<result property="priceFacetoFace" column="PRICE"/>
		<result property="fromPlace" column="FROM_PLACE"/>
		<result property="toPlace" column="TO_PLACE"/>
		<result property="goodsType" column="GOODS_TYPE"/>
		<result property="isHurry" column="IS_HURRY"/>
		<result property="payWay" column="PAY_WAY"/>
		<result property="price" column="PRICE"/>
		<result property="priceUnit" column="PRICE_UNIT"/>
		<result property="linkMobile1" column="LINK_MOBILE1"/>
		<result property="linkMobile2" column="LINK_MOBILE2"/>
		<result property="weight" column="WEIGHT"/>
		<result property="weightUnit" column="WEIGHT_UNIT"/>
		<result property="volume" column="VOLUME"/>
		<result property="volumeUnit" column="VOLUME_UNIT"/>
		<result property="enterpriseName" column="ENTERPRISE_NAME"/>
		<result property="sourceType" column="SOURCE_TYPE"/>
		<result property="publishTime" column="PUBLISH_TIME"/>
		<result property="fromPCode" column="FROM_P_CODE"/>
		<result property="fromCCode" column="FROM_C_CODE"/>
		<result property="fromTCode" column="FROM_T_CODE"/>
		<result property="toPCode" column="TO_P_CODE"/>
		<result property="toCCode" column="TO_C_CODE"/>
		<result property="toTCode" column="TO_T_CODE"/>
		<result property="displayTime" column="DISPLAY_TIME"/>
		<result property="goodsTypeCode" column="GOODS_TYPE_CODE"/>
		<result property="weightUnitCode" column="WEIGHT_UNIT_CODE"/>
		<result property="volumeUnitCode" column="VOLUME_UNIT_CODE"/>
		<result property="priceUnitCode" column="PRICE_UNIT_CODE"/>
		<result property="sourceTypeCode" column="SOURCE_TYPE_CODE"/>
		<result property="isAuth" column="IS_AUTH"/>
		<result property="isGrabPublish" column="ISGRABPUBLISH"/>
		<result property="userType" column="USER_TYPE"/>
		<result property="publisher" column="PUBLISHER"/>
		<result property="backstageWrite" column="BACKSTAGE_WRITE"/>
		<result property="infoType" column="INFO_TYPE"/>
		<result property="fromCode" column="fromCode"/>
		<result property="toCode" column="toCode"/>
		<result property="carNumNeed" column="CAR_NUM_NEED"/>
		<result property="infoContent" column="INFO_CONTENT"/>
		<result property="publishFreq" column="PUBLISH_FREQ"/>
		<result property="repateTimes" column="REPATE_TIMES"/>
		<result property="adress" column="ADRESS"/>
		<result property="carTypeNeedName" column="CAR_TYPE_NEED_NAME"/>
		<result property="carLengthNeedName" column="CAR_LENGTH_NEED_NAME"/>
		<result property="isStruct" column="IS_STRUCT"/>
		<result property="enterprisePhoto" column="ENTERPRISE_PHOTO"/>
		<result property="status" column="STATUS"/><!-- 收藏货源所需,用来解决已收藏货源，然后该货源被关闭的问题 2015年10月22日16:23:07 yunns添加-->
		<result property="isDelete" column="IS_DELETE"/>
		<result property="realName" column="REAL_NAME"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="accountName" column="ACCOUNT_NAME"/>
		<result property="userGrad" column="USER_GRAD"/>
		<result property="placeKilometre" column="PLACE_KILOMETRE"/>
		<result property="carTypeFirstCode" column="CAR_TYPE_FIRST_CODE"/>
		<result property="carTypeSecondCode" column="CAR_TYPE_SECOND_CODE"/>
		<result property="defineCarType" column="CAR_TYPE_THIRD_CODE"/>
		
		<result property="fromCityCode" column="FROM_CITY_CODE"/>
	</resultMap>
	
	<insert id="publishGoodsSource" parameterType="GoodsSource">
		insert into pisp_goods_source(
				GOODS_SOURCE_ID,FROM_PLACE,TO_PLACE,GOODS_TYPE,GOODS_NAME,SOURCE_TYPE,WEIGHT,WEIGHT_UNIT,VOLUME,VOLUME_UNIT,PRICE_UNIT,PRICE,IS_HURRY,CAR_TYPE_NEED,
				CAR_LENGTH_NEED,CAR_LENGTH_NEED_MIN,CAR_LENGTH_NEED_MAX,LOAD_DATE,PAY_WAY,COMMON_PHRASE,LINKMAN,LINK_PHONE,LINK_MOBILE1,LINK_MOBILE2,MARK,CREATE_USER,CREATE_TIME,
				FROM_P_CODE,FROM_C_CODE,FROM_T_CODE,TO_P_CODE,TO_C_CODE,TO_T_CODE,GOODS_CLASS,PUBLISHER,CAR_NUM_NEED,INFO_CONTENT,CAR_TYPE_NEED_NAME,
				CAR_LENGTH_NEED_NAME,PLACE_KILOMETRE,CAR_TYPE_FIRST_CODE,CAR_TYPE_SECOND_CODE,CAR_TYPE_THIRD_CODE,DEFINE_CAR_TYPE,CLAIM_GOODS_DAYS,GOODS_SOURCE_INFO_TYPE)
		values(#{goodsSourceId,jdbcType=INTEGER},#{fromPlace,jdbcType=VARCHAR},#{toPlace,jdbcType=VARCHAR},#{goodsType,jdbcType=INTEGER},#{goodsName,jdbcType=VARCHAR},#{sourceType,jdbcType=CHAR},
		       #{weight,jdbcType=FLOAT},#{weightUnit,jdbcType=VARCHAR},#{volume,jdbcType=FLOAT},#{volumeUnit,jdbcType=VARCHAR},
		       #{priceUnit,jdbcType=VARCHAR},#{price,jdbcType=FLOAT},#{isHurry,jdbcType=INTEGER},#{carTypeNeed,jdbcType=VARCHAR},
		       #{carLengthNeed,jdbcType=VARCHAR},#{carLengthNeedMin,jdbcType=INTEGER},#{carLengthNeedMax,jdbcType=INTEGER},
		       #{loadDate,jdbcType=TIMESTAMP},#{payWay,jdbcType=VARCHAR},#{commonPhrase,jdbcType=VARCHAR},
		       #{linkMan,jdbcType=VARCHAR},#{linkPhone,jdbcType=VARCHAR},#{linkMobile1,jdbcType=VARCHAR},#{linkMobile2,jdbcType=VARCHAR},#{mark,jdbcType=VARCHAR},#{createUser,jdbcType=INTEGER},
		       #{createTime,jdbcType=TIMESTAMP},
		       #{fromPCode,jdbcType=INTEGER},#{fromCCode,jdbcType=INTEGER},#{fromTCode,jdbcType=INTEGER},#{toPCode,jdbcType=INTEGER},#{toCCode,jdbcType=INTEGER},#{toTCode,jdbcType=INTEGER},#{goodsClass,jdbcType=VARCHAR},#{publisher,jdbcType=VARCHAR},
		       #{carNumNeed,jdbcType=INTEGER},#{infoContent,jdbcType=VARCHAR},#{carTypeNeedName,jdbcType=VARCHAR},#{carLengthNeedName,jdbcType=VARCHAR},#{placeKilometre,jdbcType=VARCHAR},#{carTypeFirstCode,jdbcType=INTEGER},#{carTypeSecondCode,jdbcType=INTEGER},
		       #{carTypeThirdCode,jdbcType=INTEGER},#{defineCarType,jdbcType=VARCHAR},#{claimGoodsDays,jdbcType=INTEGER},#{goodsSourceInfoType,jdbcType=VARCHAR}
		       )
	</insert>
	
	<update id="updateGoodsSource" parameterType="GoodsSource">
		update pisp_goods_source gs 
		<set>
			<if test="fromPlace != null and toPlace !='' ">
				gs.FROM_PLACE=#{fromPlace},
			</if>
			<if test="toPlace != null and toPlace !='' ">
				gs.TO_PLACE=#{toPlace},
			</if>
			<if test="goodsType != null and goodsType !='' ">
				gs.GOODS_TYPE=#{goodsType},
			</if>
			<if test="goodsName != null and goodsName !='' ">
				gs.GOODS_NAME=#{goodsName},
			</if>
				gs.GOODS_CLASS=#{goodsClass},
				gs.SOURCE_TYPE=#{sourceType},
				gs.WEIGHT=#{weight},
				gs.weight_UNIT=#{weightUnit},
				gs.VOLUME=#{volume},
				gs.VOLUME_UNIT=#{volumeUnit},
				gs.PRICE_UNIT=#{priceUnit},
				gs.PRICE=#{price},
				gs.IS_HURRY=#{isHurry},
				gs.CAR_TYPE_NEED=#{carTypeNeed},
				gs.CAR_LENGTH_NEED=#{carLengthNeed},
				gs.LOAD_DATE=#{loadDate},
				gs.PUBLISHER=#{publisher},
			<if test="payWay != null and payWay !='' ">
				gs.PAY_WAY=#{payWay},
			</if>
				gs.COMMON_PHRASE=#{commonPhrase},
			<if test="linkMan != null and linkMan !='' ">
				gs.LINKMAN=#{linkMan},
			</if>
				gs.LINK_PHONE=#{linkPhone},
				gs.LINK_MOBILE1=#{linkMobile1},
				gs.LINK_MOBILE2=#{linkMobile2},
				gs.CAR_TYPE_NEED_NAME=#{carTypeNeedName},
				gs.CAR_LENGTH_NEED_NAME=#{carLengthNeedName},
				gs.CAR_NUM_NEED=#{carNumNeed},
			<if test="infoContent != null and infoContent !='' ">
				gs.INFO_CONTENT=#{infoContent},
			</if>
				gs.MARK=#{mark},
			<if test="fromPCode != null">
				gs.FROM_P_CODE=#{fromPCode},
			</if>
				gs.FROM_C_CODE=#{fromCCode},
				gs.FROM_T_CODE=#{fromTCode},
			<if test="toPCode != null">
				gs.TO_P_CODE=#{toPCode},
			</if>
				gs.TO_C_CODE=#{toCCode},
				gs.TO_T_CODE=#{toTCode},
				gs.CAR_TYPE_FIRST_CODE=#{carTypeFirstCode},
				gs.CAR_TYPE_SECOND_CODE=#{carTypeSecondCode},
				gs.CAR_TYPE_THIRD_CODE=#{carTypeThirdCode},
				gs.DEFINE_CAR_TYPE=#{defineCarType},
				gs.CLAIM_GOODS_DAYS=#{claimGoodsDays},
				gs.GOODS_SOURCE_INFO_TYPE=#{goodsSourceInfoType},
			<if test="updateUser != null and updateUser !='' ">
				gs.UPDATE_USER=#{updateUser,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null and updateTime!='' ">
				gs.UPDATE_TIME=#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="placeKilometre != null and placeKilometre!='' ">
				gs.PLACE_KILOMETRE=#{placeKilometre},
			</if>
				gs.DEFINE_CAR_TYPE=#{defineCarType}
		</set> 
		where GOODS_SOURCE_ID = #{goodsSourceId}
	</update>
	
	<select id="getGoodsSource" parameterType="java.lang.Integer" resultMap="goodsSourceMap">
		SELECT * from pisp_goods_source gs
		<where>
			<if test="goodsSourceId != null">
				 gs.GOODS_SOURCE_ID = #{goodsSourceId}
			</if>
		</where>
	</select>
	
	<select id="queryGoodsSources" parameterType="GoodsSourceQuery" resultMap="goodsSourceVOMap">
			SELECT
			gs.goods_source_id,
			dict.val_name AS GOODS_TYPE_NAME,
			gs.CAR_TYPE_NEED,
			gs.CAR_LENGTH_NEED,
			gs.MARK,
			gs.LINKMAN,
			gs.LINK_PHONE,
			gs.LOAD_DATE,
			info.publish_time,
			gs.GOODS_NAME,
			gs.PRICE,
			pricedict.VAL_NAME as PRICE_UNIT,
			gs.FROM_PLACE,
			gs.TO_PLACE,
			gs.SOURCE_TYPE,
			gs.IS_HURRY,
			info.PUBLISH_ID,
			gs.WEIGHT,
			weightdict.VAL_NAME AS WEIGHT_UNIT,
			gs.VOLUME,
			volumedict.VAL_NAME AS VOLUME_UNIT,
			gs.LINK_MOBILE1,
			gs.LINK_MOBILE2,
			gs.INFO_CONTENT,
			info.DISPLAY_TIME,
			info.BACKSTAGE_WRITE,
			u.IS_AUTH,
			gs.GOODS_CLASS,
			gs.GOODS_TYPE AS GOODS_TYPE_CODE,
			u.USER_ID,
			u.USER_TYPE,
			gs.PLACE_KILOMETRE,
			<if test="userId == null">
				1 AS ISGRABPUBLISH,
				'' AS favoriteId
			</if>
			<if test="userId != null">
				CASE    
					WHEN pwb.WAYBILL_ID IS NULL THEN 1 
					ELSE 0
				END as ISGRABPUBLISH,
				puf.FAVORITE_ID AS favoriteId
				<!-- 就是链表查出的值 -->
			</if>
		FROM
			pisp_publish_info info
		LEFT JOIN pisp_user u ON u.USER_ID = info.USER_ID
		LEFT JOIN pisp_goods_source gs ON info.info_id = gs.goods_source_id
		LEFT JOIN pisp_dict_val dict ON dict.dict_code = 'GOODS_TYPE' AND val_code = gs.goods_type
		LEFT JOIN pisp_dict_val weightdict ON weightdict.dict_code = 'GOODS_WEIGHT_UNIT' AND weightdict.val_code = gs.WEIGHT_UNIT
		LEFT JOIN pisp_dict_val volumedict ON volumedict.dict_code = 'GOODS_WEIGHT_UNIT' AND volumedict.val_code = gs.VOLUME_UNIT
		LEFT JOIN pisp_dict_val pricedict ON pricedict.dict_code = 'TRANSPORT_PRICE_UNIT' AND pricedict.val_code = gs.PRICE_UNIT
		
		<if test="userId != null">
			LEFT JOIN pisp_waybill pwb on pwb.INFO_ID = gs.GOODS_SOURCE_ID AND pwb.USER_ID = #{userId}
		</if>
		<if test="null != userId">LEFT JOIN pisp_user_favorite puf ON puf.INFO_ID = info.INFO_ID AND puf.USER_ID = #{userId} AND puf.INFO_TYPE = 1</if> 
		WHERE  info.INFO_TYPE = 1
		AND info.STATUS = 3
			<if test="goodsType != null and goodsType!='' ">
				and gs.GOODS_TYPE=#{goodsType}
			</if>
			<if test="weightAmount != null and weightAmount !='' ">
				and gs.weight BETWEEN left(#{weightAmount},POSITION("-" IN #{weightAmount})-1) 
				and substring(#{weightAmount},POSITION("-" IN #{weightAmount})+1,LENGTH(#{weightAmount}))
			</if>
			<if test="carTypeNeed != null and carTypeNeed !='' ">
				and gs.CAR_TYPE_NEED  LIKE '%,${carTypeNeed},%'
			</if>
			<if test="carLengthNeed != null and carLengthNeed !='' ">
				and gs.CAR_LENGTH_NEED  LIKE '%,${carLengthNeed},%'
			</if>
			<if test="sourceType != null and sourceType !='' ">
				and gs.source_type=#{sourceType}
			</if>
			<if test="publishTime != null and publishTime !=''">
				<if test='publishTimeValCode == "1" or publishTimeValCode == "2" or publishTimeValCode =="3" '>
					and  date_format(info.PUBLISH_TIME,'%Y-%m-%d') = date_format(#{publishTime},'%Y-%m-%d')
				</if>
				<if test='publishTimeValCode == "4" or publishTimeValCode == "5" '>
					and  date_format(info.PUBLISH_TIME,'%Y-%m-%d') &gt;= date_format(#{publishTime},'%Y-%m-%d')
				</if>
				<if test='publishTimeValCode == "6" '>
					and  date_format(info.PUBLISH_TIME,'%Y-%m-%d') &lt;= date_format(#{publishTime},'%Y-%m-%d')
				</if>
			</if>
			<if test="fromPCode != null and fromPCode !=0 ">
				and  gs.FROM_P_CODE = #{fromPCode}
			</if>
			<if test="fromCCode != null and fromCCode !=0">
				and  gs.FROM_C_CODE = #{fromCCode}
			</if>
			<if test="fromTCode != null and fromTCode !=0">
				and  gs.FROM_T_CODE = #{fromTCode}
			</if>
			<if test="toPCode != null and toPCode !=0">
				 and gs.TO_P_CODE = #{toPCode}
			</if>
			<if test="toCCode != null and toCCode !=0">
				 and gs.TO_C_CODE = #{toCCode}
			</if>
			<if test="toTCode != null and toTCode !=0">
				 and gs.TO_T_CODE = #{toTCode}
			</if>
			
	</select>
	
	<select id="queryMyPublishedGoodsSourceInfo" parameterType="PublishInfoQuery" resultMap="com.lzz.lsp.core.publish.dao.PublishInfoBaseDAO.publishInfoVOMap">
		SELECT
			pub.INFO_ID,
			pub.INFO_TYPE,
			u.IS_AUTH,
			gs.INFO_CONTENT,
			pub.PUBLISH_FREQ,
			pub.REPATE_TIMES,
			pub.DISPLAY_TIME,
			pub. STATUS,
			gs.GOODS_NAME,
			gs.GOODS_SOURCE_ID,
			gs.FROM_PLACE,
			gs.TO_PLACE,
			gs.WEIGHT,
			gs.LINKMAN,
			gs.LINK_MOBILE1,
			dictweight.VAL_NAME AS WEIGHT_UNIT,
			dictvolue.VAL_NAME AS VOLUME_UNIT,
			gs.volume,
			dict.VAL_NAME AS PRICE_UNIT_NAME,
			pub.PUBLISH_TIME,
			gs.LOAD_DATE,
			pub.PUBLISH_ID,
			dictGt.VAL_NAME AS GOODS_TYPE_NAME,
			gs.GOODS_TYPE AS GOODS_TYPE_CODE,
			gs.GOODS_CLASS,
			gs.CAR_TYPE_NEED,
			pub.IS_DELETE,
			gs.PLACE_KILOMETRE
		FROM
			pisp_publish_info pub
		LEFT JOIN pisp_goods_source gs ON gs.GOODS_SOURCE_ID = pub.INFO_ID
		LEFT JOIN pisp_user u ON u.USER_ID = pub.USER_ID
		LEFT JOIN pisp_dict_val dict on dict.dict_code = 'TRANSPORT_PRICE_UNIT' and dict.val_code = gs.price_unit
		LEFT JOIN pisp_dict_val dictweight on dictweight.dict_code = 'GOODS_WEIGHT_UNIT' and dictweight.val_code = gs.WEIGHT_UNIT
		LEFT JOIN pisp_dict_val dictvolue on dictvolue.dict_code = 'GOODS_WEIGHT_UNIT' and dictvolue.val_code = gs.VOLUME_UNIT
		LEFT JOIN pisp_dict_val dictGt on dictGt.dict_code = 'GOODS_TYPE' and dictGt.val_code = gs.GOODS_TYPE
		<where>
			<if test="isDelete == 0 or isDelete == 1">pub.IS_DELETE = #{isDelete}</if>
			<if test="userId != null">
				AND pub.USER_ID=#{userId}
			</if>
			<if test="infoType != null and infoType !='' ">
			 	AND pub.INFO_TYPE=#{infoType}
			 </if>
			 <if test="status != null">
			 	AND pub.STATUS=#{status}
			 </if>
			 
		<if test="goodsType != null and goodsType!='' ">
			and gs.GOODS_TYPE=#{goodsType}
		</if>
		<if test="osmpStatus != null">
		 	AND pub.STATUS in
		 	<foreach collection="osmpStatus" item="osmpSta" open="(" separator="," close=")">
				#{osmpSta}
			</foreach>
		 </if>
		<if test="publishTimeValCode != null and publishTimeValCode !=''">
			<if test='publishTimeValCode == "1" or publishTimeValCode == "2" or publishTimeValCode =="3" '>
				and  date_format(pub.PUBLISH_TIME,'%Y-%m-%d') = date_format(#{publishTime},'%Y-%m-%d')
			</if>
			<if test='publishTimeValCode == "4" or publishTimeValCode == "5" '>
				and  date_format(pub.PUBLISH_TIME,'%Y-%m-%d') &gt;= date_format(#{publishTime},'%Y-%m-%d')
			</if>
			<if test='publishTimeValCode == "6" '>
				and  date_format(pub.PUBLISH_TIME,'%Y-%m-%d') &lt;= date_format(#{publishTime},'%Y-%m-%d')
			</if>
		</if>
		<if test="fromPCode != null and fromPCode !=0 ">
			and  gs.FROM_P_CODE = #{fromPCode}
		</if>
		<if test="fromCCode != null and fromCCode !=0">
			and  gs.FROM_C_CODE = #{fromCCode}
		</if>
		<if test="fromTCode != null and fromTCode !=0">
			and  gs.FROM_T_CODE = #{fromTCode}
		</if>
		<if test="toPCode != null and toPCode !=0">
			 and gs.TO_P_CODE = #{toPCode}
		</if>
		<if test="toCCode != null and toCCode !=0">
			 and gs.TO_C_CODE = #{toCCode}
		</if>
		<if test="toTCode != null and toTCode !=0">
			 and gs.TO_T_CODE = #{toTCode}
		</if>
		 <!-- 2015-6-16 19:09:24 yunns add for osmp queryGoodsSource method -->
		 <if test="osmpSourceType != null and osmpSourceType !='' ">
			AND gs.SOURCE_TYPE in
			<foreach collection="osmpSourceType" item="osmpST" open="(" separator="," close=")">
				#{osmpST}
			</foreach>
		</if>
		<if test="publisher != '' and publisher != null ">
		 	and gs.PUBLISHER = #{publisher}
		 </if>
		 <if test="publishTimeStart != null">
		 	 and DATE(pub.PUBLISH_TIME) &gt;= DATE(#{publishTimeStart})
		 </if>
		 <if test="publishTimeEnd != null">
		 	 and DATE(pub.PUBLISH_TIME) &lt;= DATE(#{publishTimeEnd})
		 </if>
		 <!-- end -->
		  <if test="backstageWrite != null">
			and  pub.BACKSTAGE_WRITE = #{backstageWrite}
		 </if>
		 <if test="createDate != null">
		 	 and DATE(pub.CREATE_TIME) = DATE(#{createDate})
		 </if>
		</where>
	</select>
	
	
	<select id="getGoodsSourceInfo" parameterType="java.util.Map" resultMap="goodsSourceVOMap">
		SELECT
			gs.GOODS_SOURCE_ID,
			pub.INFO_TYPE,
			u.IS_AUTH,
			u.USER_ID,
			CASE WHEN ISNULL(gs.FROM_T_CODE) THEN 
					CASE WHEN ISNULL(gs.FROM_C_CODE) THEN gs.FROM_P_CODE ELSE gs.FROM_C_CODE END
			ELSE gs.FROM_T_CODE END as fromCode,
			CASE WHEN ISNULL(gs.TO_T_CODE) THEN 
					CASE WHEN ISNULL(gs.TO_C_CODE) THEN gs.TO_P_CODE ELSE gs.TO_C_CODE END
			ELSE gs.TO_T_CODE END as toCode,
		 	gs.SOURCE_TYPE,
			gs.GOODS_TYPE,
		  	gs.GOODS_NAME,
			gs.WEIGHT,
			gs.WEIGHT_UNIT,
			gs.VOLUME,
			gs.VOLUME_UNIT,
			gs.PRICE,
			gs.PRICE_UNIT,
			gs.CAR_TYPE_NEED,
			gs.CAR_LENGTH_NEED,
			gs.CAR_NUM_NEED,
			gs.INFO_CONTENT,
			pub.PUBLISH_FREQ,
			pub.REPATE_TIMES,
			pub.DISPLAY_TIME,
			pub.STATUS,
			gs.PUBLISHER,
			CONCAT_WS('',pu.ADDRESS,eu.ADDRESS) as ADRESS,
			gs.FROM_PLACE,
			gs.TO_PLACE,
			gs.LINKMAN,
			gs.LINK_PHONE,
			gs.LINK_MOBILE1,
			gs.LINK_MOBILE2,
			gs.FROM_C_CODE as FROM_CITY_CODE,
			pub.PUBLISH_ID
		FROM
			pisp_publish_info pub
		Inner JOIN pisp_goods_source gs ON gs.GOODS_SOURCE_ID = pub.INFO_ID  and pub.info_type=1
		Inner JOIN pisp_user u ON u.USER_ID = pub.USER_ID
		LEFT JOIN pisp_puser pu ON pu.USER_ID = u.USER_ID
		LEFT JOIN pisp_euser eu ON eu.USER_ID = u.USER_ID
		<where>
			<if test="userId != null">
				AND pub.USER_ID=#{userId}
			</if>
			 <if test="infoId != null">
		 		AND gs.GOODS_SOURCE_ID=#{infoId}
		 	</if>
		</where>
	</select>
	
	<select id="getGoodsSourceView" parameterType="java.lang.Integer" resultMap="com.lzz.lsp.core.goodssource.dao.GoodsSourceBaseDAO.goodsSourceVOMap">
		SELECT
			gtdict.VAL_NAME AS GOODS_TYPE,
			gs.goods_source_id,
			gs.GOODS_NAME,
			gs.WEIGHT,
			weightdict.VAL_NAME AS WEIGHT_UNIT,
			gs.VOLUME,
			volumedict.VAL_NAME AS VOLUME_UNIT,
			gs.PAY_WAY,
			gs.CAR_TYPE_NEED,
			gs.CAR_LENGTH_NEED,
			gs.CAR_LENGTH_NEED_NAME,
			gs.CAR_TYPE_NEED_NAME,
			sourcetypedict.VAL_NAME AS SOURCE_TYPE,
			gs.LOAD_DATE,
			gs.PRICE,
			pricedict.VAL_NAME AS PRICE_UNIT,
			gs.MARK,
			gs.LINKMAN,
			gs.LINK_MOBILE1,
			gs.LINK_MOBILE2,
			gs.LINK_PHONE,
			gs.FROM_PLACE,
			gs.TO_PLACE,
			eu.ENTERPRISE_NAME,
			gs.IS_HURRY,
			info.PUBLISH_TIME,
			gs.FROM_C_CODE,
			gs.FROM_P_CODE,
			gs.FROM_T_CODE,
			gs.TO_C_CODE,
			gs.TO_P_CODE,
			gs.TO_T_CODE,
			info.PUBLISH_ID,
			info.USER_ID,
			gs.GOODS_TYPE AS GOODS_TYPE_CODE,
			gs.WEIGHT_UNIT AS WEIGHT_UNIT_CODE,
			gs.VOLUME_UNIT AS VOLUME_UNIT_CODE,
			gs.PRICE_UNIT AS PRICE_UNIT_CODE,
			gs.SOURCE_TYPE AS SOURCE_TYPE_CODE,
			gs.PUBLISHER AS PUBLISHER,
			gs.GOODS_CLASS,
			gs.INFO_CONTENT,
			info.BACKSTAGE_WRITE,
			u.ACCOUNT_NAME,
			u.IS_AUTH,
			u.USER_TYPE,
			eu.ADDRESS,
			eu.ENTERPRISE_PHOTO,
			CONCAT_WS("",p.REAL_NAME,eu.CORPORATION) AS REAL_NAME,
			u.NICKNAME,
			gs.PLACE_KILOMETRE,
			gs.DEFINE_CAR_TYPE,
			gs.CAR_TYPE_FIRST_CODE,
			gs.CAR_TYPE_SECOND_CODE,
			gs.CAR_TYPE_THIRD_CODE
		FROM
			pisp_publish_info info
		LEFT JOIN pisp_goods_source gs ON info.info_id = gs.goods_source_id
		LEFT JOIN pisp_user u ON info.user_id = u.user_id
		LEFT JOIN pisp_puser p ON p.USER_ID = u.USER_ID
		LEFT JOIN pisp_euser eu ON eu.USER_ID = u.USER_ID
		LEFT JOIN pisp_dict_val gtdict ON gtdict.DICT_CODE = 'GOODS_TYPE' AND gtdict.VAL_CODE = gs.GOODS_TYPE
		LEFT JOIN pisp_dict_val weightdict ON weightdict.DICT_CODE = 'GOODS_WEIGHT_UNIT' AND weightdict.VAL_CODE = gs.WEIGHT_UNIT
		LEFT JOIN pisp_dict_val volumedict ON volumedict.DICT_CODE = 'GOODS_WEIGHT_UNIT' AND volumedict.VAL_CODE = gs.VOLUME_UNIT
		LEFT JOIN pisp_dict_val sourcetypedict ON sourcetypedict.DICT_CODE = 'GOODS_SOURCE_INFO_TYPE' AND sourcetypedict.VAL_CODE = gs.SOURCE_TYPE
		LEFT JOIN pisp_dict_val pricedict ON pricedict.DICT_CODE = 'TRANSPORT_PRICE_UNIT' AND pricedict.VAL_CODE = gs.PRICE_UNIT
		<where>
			<if test="publishId != null">
				 info.PUBLISH_ID = #{publishId}
			</if>
		</where>
	</select>
</mapper>